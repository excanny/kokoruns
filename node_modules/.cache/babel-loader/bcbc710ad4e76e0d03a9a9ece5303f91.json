{"ast":null,"code":"var _jsxFileName = \"/Users/godsonihemere/Desktop/KokorunsProject/KokorunsUI/src/components/Experience.js\";\nimport React, { Component } from 'react';\nimport Header from '../commons/Header';\nimport NavBar from '../commons/NavBar';\nimport Modal from 'react-bootstrap/Modal';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Experience extends Component {\n  constructor() {\n    super();\n\n    this.handleRoleChange = idx => e => {\n      const newRoles = this.state.roles.map((role, sidx) => {\n        if (idx !== sidx) return role;\n        return { ...role,\n          name: e.target.value\n        };\n      });\n      this.setState({\n        roles: newRoles\n      }); //console.log(e.target.value);\n      //this.state.roles[idx] = e.target.value;\n      //this.setState({ roles: this.state.roles });\n    };\n\n    this.handleAddSkill = () => {\n      this.setState({\n        roles: this.state.roles.concat([{\n          role_name: \"\"\n        }])\n      });\n    };\n\n    this.handleRemoveSkill = idx => () => {\n      this.setState({\n        roles: this.state.roles.filter((s, sidx) => idx !== sidx)\n      });\n    };\n\n    this.showModal = () => {\n      this.setState({\n        show: true\n      });\n    };\n\n    this.hideModal = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.onHide = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.state = {\n      show: false,\n      start_month: '',\n      end_month: '',\n      start_year: '',\n      end_year: '',\n      company_name: '',\n      exposition: '',\n      roles: [{\n        role_name: \"edfefef\"\n      }],\n      experiences: [],\n      loading: true\n    };\n    this.showModal = this.showModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this); //this.handleRoleChange = this.handleRoleChange.bind(this);\n  } //    handleRoleChange(idx, e) {\n  //     let roles = [...this.state.roles];\n  //     // roles[idx] = e.target.value;\n  //     this.setState({ roles });\n  //     console.log(roles);\n  //  }\n\n\n  async componentDidMount() {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      'Authorization': 'Bearer ' + localStorage.getItem('access_token')\n    }; //console.log(data);\n    // async function asyncFunc() {\n    //   // fetch data from a url endpoint\n    //   const response = await  axios.get(`http://127.0.0.1:8000/api/experiences`, {headers: headers});\n    //   const data = await response.json();\n    //       return data;\n    // }\n    // .then((response) => {\n    //   //  if (response.data.success === true) \n    //   //  {\n    //   //     this.setState({\n    //   //       isVerifyComplete: 1,\n    //   //     });\n    //   //     this.props.history.push(\"/get-started\");\n    //   //  }  \n    //   //  else \n    //   //  {\n    //   //     this.props.history.push('/signup'); \n    //   //  }  \n    //    //this.props.history.push(\"/registersuccess\");\n    //   //  this.setState({ show: false });\n    //    //console.log(response.data.experiences);\n    //    this.setState({ experiences: response.data.experiences });\n    //    console.log(this.state.experiences);\n    //  })\n    //  .catch( error => {\n    //    console.log(error.response);\n    //  });\n\n    try {\n      // fetch data from a url endpoint\n      const response = await axios.get(`http://127.0.0.1:8000/api/experiences`, {\n        headers: headers\n      });\n      console.log(response.data.experiences[0]);\n      this.setState({\n        experiences: response.data.experiences[0],\n        loading: false\n      }); // console.log(response.data.expe[0]);\n    } catch (error) {\n      console.log(\"error\", error); // appropriately handle the error\n    }\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    // Form submission logic\n    e.preventDefault();\n    this.setState({\n      isLoading: true\n    });\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      'Authorization': 'Bearer ' + localStorage.getItem('access_token')\n    };\n    const data = {\n      start_month: this.state.start_month,\n      start_year: this.state.start_year,\n      end_month: this.state.end_month,\n      end_year: this.state.end_year,\n      start_month: this.state.start_month,\n      company_name: this.state.company_name,\n      exposition: this.state.exposition,\n      roles: JSON.stringify(this.state.roles)\n    }; //console.log(data);\n\n    axios.post(`http://127.0.0.1:8000/api/addexperience`, data, {\n      headers: headers\n    }).then(response => {\n      //  if (response.data.success === true) \n      //  {\n      //     this.setState({\n      //       isVerifyComplete: 1,\n      //     });\n      //     this.props.history.push(\"/get-started\");\n      //  }  \n      //  else \n      //  {\n      //     this.props.history.push('/signup'); \n      //  }  \n      //this.props.history.push(\"/registersuccess\");\n      this.setState({\n        show: false\n      });\n      console.log(response);\n    }).catch(error => {\n      console.log(error.response);\n    });\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <div>\n      // {this.state.experiences.map(person => (\n      //     <p>Hello, !</p>\n      // ))}\n      // </div>\n      _jsxDEV(\"div\", {\n        children: this.state.loading || !this.state.experiences ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 65\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.experiences.user_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 88\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)\n    );\n  }\n\n}\nexport default Experience;","map":{"version":3,"sources":["/Users/godsonihemere/Desktop/KokorunsProject/KokorunsUI/src/components/Experience.js"],"names":["React","Component","Header","NavBar","Modal","axios","Experience","constructor","handleRoleChange","idx","e","newRoles","state","roles","map","role","sidx","name","target","value","setState","handleAddSkill","concat","role_name","handleRemoveSkill","filter","s","showModal","show","hideModal","onHide","start_month","end_month","start_year","end_year","company_name","exposition","experiences","loading","bind","handleChange","handleSubmit","componentDidMount","headers","localStorage","getItem","response","get","console","log","data","error","preventDefault","isLoading","JSON","stringify","post","then","catch","render","user_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from '../commons/Header';\nimport NavBar from '../commons/NavBar';\nimport Modal from 'react-bootstrap/Modal';\nimport axios from 'axios';\n\nexport class Experience extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n          show: false,\n          start_month: '',\n          end_month: '',\n          start_year: '',\n          end_year: '',\n          company_name: '',\n          exposition: '',\n          roles: [\n            { role_name: \"edfefef\" }\n          ],\n          experiences: [],\n          loading: true,\n\n        };\n\n        this.showModal = this.showModal.bind(this);\n        this.hideModal = this.hideModal.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        //this.handleRoleChange = this.handleRoleChange.bind(this);\n  \n      }\n\n\n\n  //    handleRoleChange(idx, e) {\n  //     let roles = [...this.state.roles];\n  //     // roles[idx] = e.target.value;\n  //     this.setState({ roles });\n  //     console.log(roles);\n  //  }\n\n      handleRoleChange = idx => e => {\n        const newRoles= this.state.roles.map((role, sidx) => {\n          if (idx !== sidx) return role;\n          return { ...role, name: e.target.value };\n        });\n    \n        this.setState({ roles: newRoles });\n        //console.log(e.target.value);\n        //this.state.roles[idx] = e.target.value;\n        //this.setState({ roles: this.state.roles });\n      };\n\n      handleAddSkill = () => {\n        this.setState({\n          roles: this.state.roles.concat([{ role_name: \"\" }])\n        });\n      };\n    \n      handleRemoveSkill = idx => () => {\n        this.setState({\n            roles: this.state.roles.filter((s, sidx) => idx !== sidx)\n        });\n      };\n\n    \n    \n      showModal = () => {\n        this.setState({ show: true });\n      };\n    \n      hideModal = () => {\n        this.setState({ show: false });\n      };\n\n      \n      onHide = () => {\n        this.setState({ show: false });\n      }\n\n\n      async componentDidMount() {\n\n        const headers = {\n          \"Content-Type\": \"application/json\",\n          'Authorization': 'Bearer ' + localStorage.getItem('access_token'), \n        }\n\n        //console.log(data);\n\n        // async function asyncFunc() {\n        //   // fetch data from a url endpoint\n        //   const response = await  axios.get(`http://127.0.0.1:8000/api/experiences`, {headers: headers});\n        //   const data = await response.json();\n        \n        //       return data;\n        // }\n\n      \n        // .then((response) => {\n           \n        //   //  if (response.data.success === true) \n        //   //  {\n        //   //     this.setState({\n        //   //       isVerifyComplete: 1,\n        //   //     });\n             \n        //   //     this.props.history.push(\"/get-started\");\n        //   //  }  \n        //   //  else \n        //   //  {\n        //   //     this.props.history.push('/signup'); \n        //   //  }  \n\n        //    //this.props.history.push(\"/registersuccess\");\n        //   //  this.setState({ show: false });\n         \n        //    //console.log(response.data.experiences);\n\n        //    this.setState({ experiences: response.data.experiences });\n\n        //    console.log(this.state.experiences);\n\n        //  })\n        //  .catch( error => {\n        //    console.log(error.response);\n        //  });\n\n    \n          try \n          {\n              // fetch data from a url endpoint\n              const response = await  axios.get(`http://127.0.0.1:8000/api/experiences`, {headers: headers});\n\n              console.log(response.data.experiences[0]);\n\n              this.setState({ experiences: response.data.experiences[0], loading: false });\n\n              // console.log(response.data.expe[0]);\n\n          } \n          catch(error) \n          {\n            console.log(\"error\", error);\n            // appropriately handle the error\n          }\n    \n      }\n\n\n      handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n      }\n\n\n      handleSubmit(e) {\n        // Form submission logic\n        e.preventDefault();\n\n        this.setState({ isLoading: true });\n\n        this.setState({ [e.target.name]: e.target.value });\n\n        const headers = {\n          \"Content-Type\": \"application/json\",\n          'Authorization': 'Bearer ' + localStorage.getItem('access_token'), \n        }\n\n        const data = { start_month: this.state.start_month, start_year: this.state.start_year, end_month: this.state.end_month, end_year: this.state.end_year, start_month: this.state.start_month, company_name: this.state.company_name, exposition: this.state.exposition, roles:  JSON.stringify(this.state.roles)};  \n\n        //console.log(data);\n\n       axios.post(`http://127.0.0.1:8000/api/addexperience`, data, {headers: headers})\n        .then((response) => {\n           \n          //  if (response.data.success === true) \n          //  {\n          //     this.setState({\n          //       isVerifyComplete: 1,\n          //     });\n             \n          //     this.props.history.push(\"/get-started\");\n          //  }  \n          //  else \n          //  {\n          //     this.props.history.push('/signup'); \n          //  }  \n\n           //this.props.history.push(\"/registersuccess\");\n           this.setState({ show: false });\n         \n           console.log(response);\n\n         })\n         .catch( error => {\n           console.log(error.response);\n         });\n    \n\n      }\n\n\n\n    render() {\n\n\n        return (\n\n\n           \n          // <div>\n          // {this.state.experiences.map(person => (\n          //     <p>Hello, !</p>\n          // ))}\n          // </div>\n\n          <div>\n              {this.state.loading || !this.state.experiences ? (<div>Loading</div>) : (<div>{this.state.experiences.user_id}</div>)}\n          </div>\n\n         \n\n        )\n    }\n}\n\nexport default Experience\n"]},"metadata":{},"sourceType":"module"}